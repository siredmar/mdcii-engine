package chunks

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestIslandHouse(t *testing.T) {
	assert := assert.New(t)

	data := []byte{
		0x49, 0x4E, 0x53, 0x45, 0x4C, 0x48, 0x41, 0x55, 0x53, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
		0xE0, 0x00, 0x00, 0x00, 0x8D, 0x0A, 0x30, 0x05, 0x00, 0xC3, 0xF5, 0x03, 0x8D, 0x0A, 0x34, 0x07,
		0x00, 0xC3, 0xF9, 0x03, 0x8D, 0x0A, 0x36, 0x07, 0x00, 0xC3, 0xD3, 0x03, 0x8D, 0x0A, 0x37, 0x07,
		0x00, 0xC3, 0xE7, 0x03, 0x8D, 0x0A, 0x39, 0x08, 0x00, 0xC3, 0xE3, 0x03, 0x8D, 0x0A, 0x38, 0x09,
		0x00, 0xC3, 0xED, 0x03, 0x8D, 0x0A, 0x38, 0x0A, 0x00, 0xC3, 0xC1, 0x03, 0x8D, 0x0A, 0x39, 0x0D,
		0x00, 0xC3, 0xC9, 0x03, 0xAF, 0x0A, 0x15, 0x13, 0x01, 0xC3, 0xFB, 0x03, 0xAF, 0x0A, 0x17, 0x14,
		0x00, 0xC3, 0xDF, 0x03, 0xB1, 0x0A, 0x12, 0x15, 0x00, 0xC3, 0xE9, 0x03, 0x8D, 0x0A, 0x19, 0x17,
		0x00, 0xC3, 0xCF, 0x03, 0x8D, 0x0A, 0x09, 0x19, 0x00, 0xC3, 0xF9, 0x03, 0xB1, 0x0A, 0x06, 0x1A,
		0x02, 0xC3, 0xC9, 0x03, 0xB1, 0x0A, 0x08, 0x1B, 0x02, 0xC3, 0xC9, 0x03, 0xA5, 0x0A, 0x07, 0x1C,
		0x03, 0xC3, 0xDB, 0x03, 0xAF, 0x0A, 0x08, 0x1C, 0x00, 0xC3, 0xC9, 0x03, 0xAF, 0x0A, 0x07, 0x1E,
		0x03, 0xC3, 0xFF, 0x03, 0x8D, 0x0A, 0x07, 0x20, 0x00, 0xC3, 0xF9, 0x03, 0xA7, 0x0A, 0x0A, 0x22,
		0x00, 0xC3, 0xCB, 0x03, 0x8D, 0x0A, 0x30, 0x22, 0x00, 0xC3, 0xF1, 0x03, 0xA7, 0x0A, 0x2C, 0x23,
		0x02, 0xC3, 0xC7, 0x03, 0xA9, 0x0A, 0x2D, 0x24, 0x02, 0xC3, 0xCF, 0x03, 0x8D, 0x0A, 0x25, 0x25,
		0x00, 0xC3, 0xFD, 0x03, 0x8D, 0x0A, 0x2F, 0x25, 0x00, 0xC3, 0xC5, 0x03, 0x8D, 0x0A, 0x1C, 0x27,
		0x00, 0xC3, 0xD7, 0x03, 0x8D, 0x0A, 0x22, 0x27, 0x00, 0xC3, 0xC9, 0x03, 0x8D, 0x0A, 0x1F, 0x29,
		0x00, 0xC3, 0xD1, 0x03,
	}
	chunk, err := NewChunk(data)
	assert.Nil(err)
	islandhouse, err := NewIslandHouse(chunk, IslandDimensions{64, 64})
	assert.Nil(err)
	assert.NotNil(islandhouse)
	assert.Len(islandhouse.Fields, islandhouse.size.Height*islandhouse.size.Width)
	assert.Equal(islandhouse.Fields[5*64+48].Id, 2701)
	assert.Equal(islandhouse.Fields[5*64+48].IslandNumber, 12)
	assert.Equal(islandhouse.Fields[5*64+48].Posx, 0)
	assert.Equal(islandhouse.Fields[5*64+48].Posy, 0)

	assert.Equal(islandhouse.Fields[41*64+31].Id, 2701)
	assert.Equal(islandhouse.Fields[41*64+31].IslandNumber, 12)
	assert.Equal(islandhouse.Fields[41*64+31].Posx, 0)
	assert.Equal(islandhouse.Fields[41*64+31].Posy, 0)

}
