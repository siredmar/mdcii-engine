syntax = "proto3";

package GamesPb;

enum SingleGameFlags
{
    UNSET = 0;
    // true means multiplayer, false means single player
    PLAYERS = 1;
}

// Single game mission
message SingleGame
{
    // the name of the game
    string name = 1;
    // the full directory path of the scenario file
    string path = 2;
    // the ranking resulting in stars in games list
    int32 stars = 3;
    // flags, bitfield of type SingleGameFlags
    int32 flags = 4;
    // flag indicating if the single mission comes from the original game or with NINA addon
    bool original = 5;
    // mission number count
    int32 missionNumber = 6;
    // mission text
    string missionText = 7;
}

// Campaign: group of multiple missions
message Campaign
{
    // the name of the campaign
    string name = 1;
    // the ranking of the campaign resulting in stars in games list
    int32 stars = 2;
    // campaign number
    int32 number = 3;
    // the list of single games for the campaign
    repeated SingleGame game = 4;
}

// Endless missions
message EndlessGame
{
    // the name of the game
    string name = 1;
    // the full directory path of the scenario file
    string path = 2;
    // the ranking resulting in stars in games list
    int32 stars = 3;
    // flags like single/multiplayer
    int32 flags = 4;
    // mission text
    string missionText = 5;
}

message Games
{
    // a list of original single game missions called
    repeated SingleGame addonSingle = 1;
    // a list of addon single game missions called
    repeated SingleGame originalSingle = 2;
    // a list of campaigns containing single games
    repeated Campaign campaign = 3;
    // a list of endless games
    repeated EndlessGame endless = 4;
}
